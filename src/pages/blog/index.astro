---
import Layout from '../../layouts/Layout.astro';
import BlogCard from '../../components/blog/BlogCard.astro';
import BlogHeader from '../../components/blog/BlogHeader.astro';
import BlogCategories from '../../components/blog/BlogCategories.astro';
import { getAllPosts } from '../../utils/blog';

const posts = await getAllPosts();

// Calculate category counts correctly
const categoryCount = posts.reduce((acc, post) => {
  const category = post.category;
  if (!acc[category]) {
    acc[category] = 0;
  }
  acc[category]++;
  return acc;
}, {} as Record<string, number>);

// Sort categories alphabetically and add "All" category
const sortedCategories = {
  'All': posts.length,
  ...Object.fromEntries(
    Object.entries(categoryCount)
      .sort(([a], [b]) => a.localeCompare(b))
  )
};
---

<Layout 
  title="Blog | AI Solutions and Insights"
  description="Explore the latest insights, trends, and success stories in AI technology and business transformation."
>
  <BlogHeader />
  
  <section class="py-20">
    <div class="container mx-auto px-4">
      <BlogCategories categories={sortedCategories} />
      
      <div id="blog-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-12">
        {posts.map((post) => (
          <div class="blog-post" data-category={post.category} data-visible="true">
            <BlogCard post={post} />
          </div>
        ))}
      </div>

      <div id="load-more-container" class="mt-12 flex justify-center">
        <button 
          id="load-more-btn"
          class="px-8 py-3 bg-gradient-to-r from-[#0d9488] to-[#3b82f6] text-white rounded-lg font-medium hover:from-[#0b847a] hover:to-[#2563eb] transition-all duration-200 transform hover:-translate-y-1 hover:shadow-lg"
        >
          Load More
        </button>
      </div>
    </div>
  </section>
</Layout>

<script>
  let currentPage = 1;
  const postsPerPage = 6;
  let currentCategory = 'All';

  function updateVisibility() {
    const posts = document.querySelectorAll('.blog-post');
    let visibleCount = 0;
    
    posts.forEach((post) => {
      const postCategory = post.getAttribute('data-category');
      const matchesCategory = currentCategory === 'All' || postCategory === currentCategory;
      
      if (matchesCategory) {
        visibleCount++;
        if (visibleCount <= currentPage * postsPerPage) {
          post.style.display = 'block';
          post.setAttribute('data-visible', 'true');
        } else {
          post.style.display = 'none';
          post.setAttribute('data-visible', 'false');
        }
      } else {
        post.style.display = 'none';
        post.setAttribute('data-visible', 'false');
      }
    });

    // Update load more button visibility
    const loadMoreBtn = document.getElementById('load-more-btn');
    const loadMoreContainer = document.getElementById('load-more-container');
    const hasMorePosts = visibleCount > currentPage * postsPerPage;
    
    if (loadMoreContainer) {
      loadMoreContainer.style.display = hasMorePosts ? 'flex' : 'none';
    }
  }

  function loadMore() {
    currentPage++;
    updateVisibility();
  }

  function filterByCategory(category) {
    currentCategory = category;
    currentPage = 1;
    updateVisibility();
  }

  // Initialize
  document.addEventListener('DOMContentLoaded', () => {
    updateVisibility();
    
    // Add load more button click handler
    const loadMoreBtn = document.getElementById('load-more-btn');
    loadMoreBtn?.addEventListener('click', loadMore);

    // Listen for category filter changes
    document.addEventListener('filterCategory', (e: CustomEvent) => {
      filterByCategory(e.detail.category);
    });
  });
</script>

<style>
  .blog-post {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .blog-post[data-visible="true"] {
    opacity: 1;
    transform: translateY(0);
  }
</style>